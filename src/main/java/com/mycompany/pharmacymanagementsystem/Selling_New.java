/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.mycompany.pharmacymanagementsystem;

import java.awt.BorderLayout;
import java.awt.print.PrinterException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JScrollPane;
import javax.swing.border.Border;
import javax.swing.table.DefaultTableModel;
import net.proteanit.sql.DbUtils;

/**
 *
 * @author chand
 */
public class Selling_New extends javax.swing.JFrame {

    /**
     * Creates new form Medicine
     */
    public Selling_New() {
        initComponents();
        dbconnection();
        SelectMed();
        SelectTempBilling();
        showDate();
        setBillID();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")

    Connection Con = null;
    Statement St = null, St1 = null;
    ResultSet Rs = null, Rs1 = null;
    int Price = 0, TempPrice = 0;
    int Id = 0, TempId = 0;
    int availableQty = 0, TempQty = 0;
    int total = 0;

    public void clearText() {
        Medicine.setText("");
        SellQty.setText("");
    }

    public void clearAllText() {
        Medicine.setText("");
        SellQty.setText("");
        Total.setText("");
        Payment.setText("");
        Balance.setText("");
    }

    public void showDate() {
        Date date = new Date();
        SimpleDateFormat df = new SimpleDateFormat("dd-MM-yyyy");
        DateLabel.setText("Date : " + df.format(date));
    }
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane4 = new javax.swing.JScrollPane();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        SellId = new javax.swing.JTextField();
        Medicine = new javax.swing.JTextField();
        Add = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        DateLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        MedicineTable = new javax.swing.JTable();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        SellQty = new javax.swing.JTextField();
        Print = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        BillText = new javax.swing.JTextArea();
        jLabel12 = new javax.swing.JLabel();
        Total = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        Payment = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        Balance = new javax.swing.JTextField();
        jScrollPane3 = new javax.swing.JScrollPane();
        TempBillingTable = new javax.swing.JTable();
        Remove = new javax.swing.JButton();
        AgentLabel = new javax.swing.JLabel();
        MedicineLabel = new javax.swing.JLabel();
        CompanyLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(0, 0, 153));

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        jLabel4.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 0, 155));
        jLabel4.setText("ID*");

        jLabel5.setFont(new java.awt.Font("Century Gothic", 1, 24)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 0, 155));
        jLabel5.setText("Billing");

        jLabel6.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(0, 0, 155));
        jLabel6.setText("Medicine*");

        SellId.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        SellId.setForeground(new java.awt.Color(0, 0, 155));
        SellId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SellIdActionPerformed(evt);
            }
        });

        Medicine.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        Medicine.setForeground(new java.awt.Color(0, 0, 155));

        Add.setBackground(new java.awt.Color(255, 255, 255));
        Add.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        Add.setForeground(new java.awt.Color(0, 0, 153));
        Add.setText("Add To Bill");
        Add.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                AddMouseClicked(evt);
            }
        });
        Add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(0, 0, 155));
        jLabel7.setText("Seller");

        DateLabel.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        DateLabel.setForeground(new java.awt.Color(0, 0, 155));
        DateLabel.setText("Date");

        MedicineTable.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        MedicineTable.setForeground(new java.awt.Color(0, 0, 155));
        MedicineTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Id", "Med Name", "Med Price", "Quantity", "Fab Date", "Exp Date", "Company"
            }
        ));
        MedicineTable.setRowHeight(25);
        MedicineTable.setSurrendersFocusOnKeystroke(true);
        MedicineTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                MedicineTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(MedicineTable);

        jLabel9.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(0, 0, 155));
        jLabel9.setText("Medicine List");

        jLabel10.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(0, 0, 155));
        jLabel10.setText("Qty*");

        SellQty.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        SellQty.setForeground(new java.awt.Color(0, 0, 155));

        Print.setBackground(new java.awt.Color(255, 255, 255));
        Print.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        Print.setForeground(new java.awt.Color(0, 0, 153));
        Print.setText("Print");
        Print.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                PrintMouseClicked(evt);
            }
        });
        Print.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PrintActionPerformed(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(0, 0, 155));
        jLabel11.setText("Bill");

        BillText.setColumns(20);
        BillText.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        BillText.setRows(5);
        BillText.setText("***********************************Tapasi Medical Store********************************");
        BillText.setToolTipText("");
        BillText.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        jScrollPane2.setViewportView(BillText);

        jLabel12.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(0, 0, 155));
        jLabel12.setText("Total");

        Total.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        Total.setForeground(new java.awt.Color(0, 0, 155));

        jLabel13.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(0, 0, 155));
        jLabel13.setText("Payment");

        Payment.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        Payment.setForeground(new java.awt.Color(0, 0, 155));

        jLabel14.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(0, 0, 155));
        jLabel14.setText("Balance");

        Balance.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        Balance.setForeground(new java.awt.Color(0, 0, 155));

        TempBillingTable.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        TempBillingTable.setForeground(new java.awt.Color(0, 0, 155));
        TempBillingTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Id", "Med Name", "Med Price", "Quantity"
            }
        ));
        TempBillingTable.setRowHeight(25);
        TempBillingTable.setSurrendersFocusOnKeystroke(true);
        TempBillingTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TempBillingTableMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(TempBillingTable);

        Remove.setBackground(new java.awt.Color(255, 255, 255));
        Remove.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        Remove.setForeground(new java.awt.Color(0, 0, 153));
        Remove.setText("Remove From Bill");
        Remove.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                RemoveMouseClicked(evt);
            }
        });
        Remove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RemoveActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addComponent(jLabel4)
                            .addComponent(jLabel10)
                            .addComponent(jLabel12)
                            .addComponent(jLabel14)
                            .addComponent(jLabel13))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(Payment, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(SellQty, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 126, Short.MAX_VALUE)
                            .addComponent(SellId, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Medicine, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Total, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Balance))
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1034, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(DateLabel)
                        .addGap(216, 216, 216))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addComponent(Print, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(480, 480, 480))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 1034, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap())
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel9))
                                .addGap(513, 513, 513))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel11)
                                .addGap(565, 565, 565))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 549, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(306, 306, 306))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addComponent(Add, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(149, 149, 149)
                                .addComponent(Remove)
                                .addGap(315, 315, 315))))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(38, 38, 38)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(DateLabel)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addComponent(jLabel9)
                .addGap(8, 8, 8)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(SellId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(14, 14, 14)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(Medicine, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10)
                            .addComponent(SellQty, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel12)
                            .addComponent(Total, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel13)
                            .addComponent(Payment, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel14)
                            .addComponent(Balance, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 289, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(39, 39, 39)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Add)
                    .addComponent(Remove))
                .addGap(28, 28, 28)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
                .addComponent(jLabel11)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(Print)
                .addContainerGap())
        );

        AgentLabel.setFont(new java.awt.Font("Century Gothic", 1, 24)); // NOI18N
        AgentLabel.setForeground(new java.awt.Color(240, 240, 240));
        AgentLabel.setText("Agents");
        AgentLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                AgentLabelMouseClicked(evt);
            }
        });

        MedicineLabel.setFont(new java.awt.Font("Century Gothic", 1, 24)); // NOI18N
        MedicineLabel.setForeground(new java.awt.Color(240, 240, 240));
        MedicineLabel.setText("Medicine");
        MedicineLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                MedicineLabelMouseClicked(evt);
            }
        });

        CompanyLabel.setFont(new java.awt.Font("Century Gothic", 1, 24)); // NOI18N
        CompanyLabel.setForeground(new java.awt.Color(240, 240, 240));
        CompanyLabel.setText("Company");
        CompanyLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                CompanyLabelMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(MedicineLabel)
                    .addComponent(AgentLabel)
                    .addComponent(CompanyLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(314, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap(36, Short.MAX_VALUE)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(146, 146, 146)
                        .addComponent(MedicineLabel)
                        .addGap(18, 18, 18)
                        .addComponent(CompanyLabel)
                        .addGap(18, 18, 18)
                        .addComponent(AgentLabel)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        jScrollPane4.setViewportView(jPanel1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 1753, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 836, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void SellIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SellIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_SellIdActionPerformed

    private void AddMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AddMouseClicked
        try {
            i++;
            if (Medicine.getText().isEmpty() || SellQty.getText().isEmpty()) {
                i--;
                JOptionPane.showMessageDialog(this, "Select Medicine to Add or Enter Qty.");
            } else {
                updateQty(Integer.valueOf(SellQty.getText()));
                if (i == 1) {
                    BillText.setText("***********************************Tapasi Medical Store********************************\n"
                        + "\t   -Ve SLNo= Removed after addiding" + "\n"
                        + "\t   BillNo " + SellId.getText() + "\n"
                        + "\t   SLNo   MedicineName   Qty   Price   Total\n"
                        + "\t   " + i + "   " + Medicine.getText() + "   " + SellQty.getText() + "   " + Price + "   " + Integer.valueOf(SellQty.getText()) * Price);
                } else {
                    BillText.setText(BillText.getText() + "\n"
                        + "\t   " + i + "   " + Medicine.getText() + "   " + SellQty.getText() + "   " + Price + "   " + Integer.valueOf(SellQty.getText()) * Price);
                }
                updateTotal(Integer.valueOf(SellQty.getText()));
                Con = dbconnection();
                PreparedStatement add = Con.prepareStatement("insert into TEMPBILLING Values(?,?,?,?)");
                add.setInt(1, Id);
                add.setString(2, Medicine.getText());
                add.setInt(3, Price);
                add.setInt(4, Integer.valueOf(SellQty.getText()));
                int row = add.executeUpdate();
                Con.close();
                SelectTempBilling();
                clearText();
            }

        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_AddMouseClicked

    private void AddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_AddActionPerformed

    private void MedicineTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MedicineTableMouseClicked
        try {
            DefaultTableModel model = (DefaultTableModel) MedicineTable.getModel();
            int MyIndex = MedicineTable.getSelectedRow();
            Id = Integer.valueOf(model.getValueAt(MyIndex, 0).toString());
            Medicine.setText(model.getValueAt(MyIndex, 1).toString());
            Price = Integer.valueOf(model.getValueAt(MyIndex, 2).toString());
            availableQty = Integer.valueOf(model.getValueAt(MyIndex, 3).toString());
            TempPrice = Integer.valueOf(model.getValueAt(MyIndex, 2).toString());
            TempQty = Integer.valueOf(model.getValueAt(MyIndex, 3).toString());
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_MedicineTableMouseClicked

    private void PrintMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_PrintMouseClicked
        try {
            setBalance();
            printTotalIntheBillText();
            updateBillTable();
            deleteTempBilling();
            SelectTempBilling();
            BillText.print();
            clearAllText();
            setBillID();
        } catch (PrinterException ex) {
            //            Logger.getLogger(Selling.class.getName()).log(Level.SEVERE, null, ex);
            ex.printStackTrace();

        }
    }//GEN-LAST:event_PrintMouseClicked

    private void PrintActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PrintActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_PrintActionPerformed

    private void TempBillingTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TempBillingTableMouseClicked
        try {
            DefaultTableModel model = (DefaultTableModel) TempBillingTable.getModel();
            int MyIndex = TempBillingTable.getSelectedRow();
            TempId = Integer.valueOf(model.getValueAt(MyIndex, 0).toString());
            Medicine.setText(model.getValueAt(MyIndex, 1).toString());
            TempPrice = Integer.valueOf(model.getValueAt(MyIndex, 2).toString());
            TempQty = Integer.valueOf(model.getValueAt(MyIndex, 3).toString());
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_TempBillingTableMouseClicked

    private void RemoveMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_RemoveMouseClicked
        try {
            if (TempQty != 0) {
                Con = dbconnection();
                St1 = Con.createStatement();
                Rs1 = St1.executeQuery("SELECT MEDQTY FROM USER1.MEDICINETABLE WHERE MEDID=" + TempId);
                Rs1.next();
                int qty = Integer.valueOf(Rs1.getString("MEDQTY"));
                System.out.println("qty " + qty);
                String Querry = "UPDATE USER1.MEDICINETABLE SET MEDQTY=" + (qty + TempQty) + " WHERE MEDID=" + TempId;
                Statement UpdateQuerry = Con.createStatement();
                UpdateQuerry.execute(Querry);
                String DeleteQuerry = "DELETE FROM USER1.TEMPBILLING WHERE MEDID=" + TempId;
                Statement Delete = Con.createStatement();
                Delete.execute(DeleteQuerry);
                int uppdatedTotal = Integer.valueOf(Total.getText()) - (TempPrice * TempQty);
                Total.setText(String.valueOf(uppdatedTotal));
                total = uppdatedTotal;
                j++;
                BillText.setText(BillText.getText() + "\n"
                    + "\t   -" + j + "   " + Medicine.getText() + "   " + TempQty+ "   " + TempPrice + "   " + TempQty * Price);
                SelectMed();
                SelectTempBilling();
                Con.close();
            } else {
                JOptionPane.showMessageDialog(this, "Select Medicine to remove from bill.");
            }

        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_RemoveMouseClicked

    private void RemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RemoveActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_RemoveActionPerformed

    private void AgentLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AgentLabelMouseClicked
        new Agent().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_AgentLabelMouseClicked

    private void MedicineLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MedicineLabelMouseClicked
        new Medicine().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_MedicineLabelMouseClicked

    private void CompanyLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_CompanyLabelMouseClicked
        new Company().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_CompanyLabelMouseClicked

    public void SelectMed() {
        try {
            Con = dbconnection();
            St1 = Con.createStatement();
            Rs1 = St1.executeQuery("SELECT * FROM USER1.MEDICINETABLE ORDER BY MEDNAME ASC");
            MedicineTable.setModel(DbUtils.resultSetToTableModel(Rs1));
            Con.close();

        } catch (Exception ex) {
            //Logger.getLogger(Medicine.class.getName()).log(Level.SEVERE, null, ex);
            ex.printStackTrace();
        }
    }

    public void SelectTempBilling() {
        try {
            Con = dbconnection();
            St1 = Con.createStatement();
            Rs1 = St1.executeQuery("SELECT * FROM USER1.TEMPBILLING");
            TempBillingTable.setModel(DbUtils.resultSetToTableModel(Rs1));
            Con.close();

        } catch (Exception ex) {
            //Logger.getLogger(Medicine.class.getName()).log(Level.SEVERE, null, ex);
            ex.printStackTrace();
        }
    }

    public void updateQty(int qty) {
        try {
            if (availableQty >= qty) {
                Con = dbconnection();
                String Querry = "UPDATE USER1.MEDICINETABLE SET MEDQTY=" + (availableQty - qty) + " WHERE MEDID=" + Id;
                Statement UpdateQuerry = Con.createStatement();
                UpdateQuerry.execute(Querry);
                SelectMed();
                Con.close();
            } else {
                JOptionPane.showMessageDialog(this, "Enter Qty is more than avaialble qty.");
            }

        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }

    public void updateTotal(int qty) {
        try {
            if (availableQty >= qty) {
                total = total + (Price * qty);
                Total.setText(String.valueOf(total));
            } else {
                JOptionPane.showMessageDialog(this, "Enter Qty is more than avaialble qty.");
            }

        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }

    public void setBalance() {
        int balance = Integer.parseInt(Payment.getText()) - Integer.parseInt(Total.getText());
        Balance.setText(String.valueOf(balance));
    }

    public void updateBillTable() {
        Date d = new Date();
        try {
            Con = dbconnection();
            PreparedStatement add = Con.prepareStatement("insert into BILLTABLE Values(?,?,?,?,?,?)");
            add.setInt(1, Integer.valueOf(SellId.getText()));
            add.setDate(2, new java.sql.Date(d.getTime()));
            add.setString(3, BillText.getText());
            add.setInt(4, Integer.valueOf(Total.getText()));
            add.setInt(5, Integer.valueOf(Payment.getText()));
            add.setInt(6, Integer.valueOf(Balance.getText()));
            int row = add.executeUpdate();
            Con.close();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    public void setBillID() {
        try {
            Con = dbconnection();
            St1 = Con.createStatement();
            Rs1 = St1.executeQuery("SELECT COUNT(BILLID) FROM USER1.BILLTABLE");
            Rs1.next();
            int count = Rs1.getInt("1");
            SellId.setText(String.valueOf(++count));
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
    int i = 0;    public void deleteTempBilling() {
        try {
            Con = dbconnection();
            String Querry = "DELETE FROM USER1.TEMPBILLING";
            Statement Delete = Con.createStatement();
            Delete.execute(Querry);
            Con.close();
        } catch (Exception ex) {
            ex.printStackTrace();
        }

    }

    public void printTotalIntheBillText() {
        BillText.setText(BillText.getText() + "\n\n"
                + "\t   " + "Total" + "   " + Total.getText());
        BillText.setText(BillText.getText() + "\n"
                + "\t   " + "Payment" + "   " + Payment.getText());
        BillText.setText(BillText.getText() + "\n"
                + "\t   " + "Balance" + "   " + Balance.getText());
        BillText.setText(BillText.getText() + "\n"
                + "\t\t   " + "Thank you.Visit again soon.");
    }

    public Connection dbconnection() {
        Connection Con1 = null;
        try {
            Class.forName("org.apache.derby.jdbc.ClientDriver")/*.newInstance()*/;
            String path = System.getProperty("user.dir") + "/../PHARMADATABASE";
            Con1= DriverManager.getConnection("jdbc:derby:"+path, "User1", "1234");
            //Con1 = DriverManager.getConnection("jdbc:derby://localhost:1527/PHARMADATABASE", "User1", "1234");
        } catch (Exception ex) {
            System.out.println(ex.getMessage());
        }
        return Con1;
    }
    int j = 0;
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Selling_New.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Selling_New.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Selling_New.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Selling_New.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Selling_New().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Add;
    private javax.swing.JLabel AgentLabel;
    private javax.swing.JTextField Balance;
    private javax.swing.JTextArea BillText;
    private javax.swing.JLabel CompanyLabel;
    private javax.swing.JLabel DateLabel;
    private javax.swing.JTextField Medicine;
    private javax.swing.JLabel MedicineLabel;
    private javax.swing.JTable MedicineTable;
    private javax.swing.JTextField Payment;
    private javax.swing.JButton Print;
    private javax.swing.JButton Remove;
    private javax.swing.JTextField SellId;
    private javax.swing.JTextField SellQty;
    private javax.swing.JTable TempBillingTable;
    private javax.swing.JTextField Total;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    // End of variables declaration//GEN-END:variables
}
